comb.norm = rnorm(10000,mean=5,sd=3) + rnorm(10000,mean=10,sd=4)
mean(comb.norm)
sd(comb.norm)
hist(comb.norm)
qqnorm(comb.norm)
qqline(comb.norm)
sing.exp = rexp(10000,rate=.25)
mean(sing.exp)
sd(sing.exp)
plot(seq(0,10,by=.01),dexp(seq(0,10,by=.01),rate=.25),type = 'l')
comb.2exp = rexp(10000,rate = .25) + rexp(10000,rate = .25)
comb.2exp = rexp(10000,rate = .25) + rexp(10000,rate = .25)
mean(comb.2exp)
sd(comb.2exp)
plot(density(comb.2exp),xlim = c(0,20))
comb.3exp = rexp(10000,rate = .25) + rexp(10000,rate = .25) + rexp(10000,rate = .25)
```{r}
mean(comb.3exp)
sd(comb.3exp)
plot(density(comb.3exp),xlim = c(0,30))
comb.10exp = replicate(10000,sum(rexp(10,rate = .25)))
mean(comb.10exp)
sd(comb.10exp)
plot(density(comb.10exp),xlim = c(0,100))
qqnorm(comb.10exp)
qqline(comb.10exp)
comb.100exp = replicate(10000,sum(rexp(100,rate = .25)))
mean(comb.100exp)
sd(comb.100exp)
```
plot(density(comb.100exp),xlim = c(0,1000))
qqnorm(comb.100exp)
qqline(comb.100exp)
mean.exp = comb.100exp/100
mean(mean.exp) # Should be ~4
sd(mean.exp) # Should be ~ 0.4 (4 / sqrt(100))
hist(mean.exp) # Looks pretty normal...
install.packages("ggplot2")
library("ggplot2")
diamonds
head(diamonds)
summary(diamonds)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() #(dataset, aesthetics, )
ggplot(diamonds, aes(x=depth, y=price)) + geom_point() #(dataset, aesthetics, ) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() #(dataset, aesthetics, ) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=color)) + geom_point() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=color)) + geom_point() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=cut)) + geom_point() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity, size=cut)) + geom_point() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity, size=cut)) + geom_point(alpha=0.3) #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity, size=cut)) + geom_point(alpha=0.3) + geom_smooth#(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity, size=cut)) + geom_point(alpha=0.3) + geom_smooth() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity, size=cut)) + geom_point() + geom_smooth() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + geom_smooth() #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + geom_smooth(se=FALSE) #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + geom_smooth(se=FALSE) #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_smooth(se=FALSE) #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + geom_smooth(se=FALSE) + ggtitle("Colors so many !!)#(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + geom_smooth(se=FALSE) + ggtitle("Colors so many !!") #(dataset, aesthetics, adding color coding) + layers for plot()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + geom_smooth(se=FALSE) + ggtitle("Colors so many !!") + xlab("Weight(carats)") + ylab("Price (dollars)")#(dataset, aesthetics, adding color coding) + layers for plot()
plot <- ggplot(diamonds, aes(x=carat, y=price, color=cut))
plot <- plot + geom_point()
plot
plot <- plot + ggtitle("Colors so many !!!") + xlab("Weight (carats)" + ylab("Price (dollars)"))
plot <- plot + ggtitle("Colors so many !!!") + xlab("Weight (carats)") + ylab("Price (dollars)")
plot <- plot + xlim(0,2)
plot
plot <- plot + xlim(0,2) + ylim(0, 10000)
plot
plot <- plot + scale_y_log10()
plot
ggplot(diamonds, aes(x=price)) + geom_histogram()
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth=2000) # by default each bin is 30
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth=200) # by default each bin is 30
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth=200) +facet_wrap(~clarity) # by default each bin is 30
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth=200) +facet_wrap(~clarity, scale="free_y")
ggplot(diamonds, aes(x=price, fill=clarity)) + geom_histogram()
ggplot(diamonds, aes(x=price, fill=cut)) + geom_histogram()
ggplot(diamonds, aes(x=price)) + geom_density()
ggplot(diamonds, aes(x=price, color=cut)) + geom_density()
ggplot(diamonds, aes(x=price, fill=cut)) + geom_density()
ggplot(diamonds, aes(x=price, fill=cut)) + geom_density(alpha=0.3)
ggplot(diamonds, aes(x=price)) + geom_boxplot()
ggplot(diamonds, aes(x=price, y=price)) + geom_boxplot()
ggplot(diamonds, aes(x=color, y=price)) + geom_boxplot()
ggplot(diamonds, aes(x=color, y=price)) + geom_boxplot() + scale_y_log10()
ggplot(diamonds, aes(x=color, y=price)) + geom_violin()
ggplot(diamonds, aes(x=color, y=price)) + geom_violin() + scale_y_log10()
ggplot(diamonds, aes(x=color, y=price)) + geom_bar()
ggplot(diamonds, aes(x=cut)) + geom_bar()
ggplot(diamonds, aes(x=cut, y=price)) + geom_bar()
ggplot(diamonds, aes(x=cut)) + geom_bar()
ggplot(diamonds, aes(x=cut, fill=cut)) + geom_bar()
ggplot(diamonds, aes(x=color, fill=cut)) + geom_bar()
ggplot(diamonds, aes(x=color, fill=cut)) + geom_bar(position = "dodge")
ggplot(diamonds, aes(x=color, fill=cut)) + geom_bar()
ggplot(diamonds, aes(x=color, fill=cut)) + geom_bar(position = "dodge")
x <- 0:5
y <- x * 3000
model <- data.frame(x,y)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + geom_line(data=model, x=x, y=x)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + geom_line(data=model, x=x, y=y)
setwd("~/Desktop/Github/pvaelli-ZOOL851/notes")
ggsave(filename="pretty.pdf", plot)
plot <- ggplot(diamonds, aes(x=color, fill=cut)) + geom_bar() # stacked vs adjacent (next code)
ggsave(filename="pretty.pdf", plot) # can do .png or .jpeg etc.
