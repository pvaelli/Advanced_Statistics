ngroups <-8 # Number of populations
nsample <-15 # Number of snakes in each
pop.means <-c(50,40,45,55,60,35,65,50) # Population mean SVL
sigma <-3 # Residualsd
n <-ngroups*nsample # Total number of datapoints
eps <-rnorm(n,0,sigma) # Residuals
x <-rep(1:ngroups,rep(nsample,ngroups)) # Indicator for population
means <-rep(pop.means,rep(nsample,ngroups))
X <-as.matrix(model.matrix(~as.factor(x)-1)) #Create design matrix
X # Inspect the data
y <- as.numeric(X%*%as.matrix(pop.means)+eps)
boxplot(y~x,col="grey",xlab="Population",ylab="SVL",main="",las=1)
mean(y); sd(y)
fit=lm(y~as.factor(x))
anova(fit)
summary(fit)
fit2=aov(y~as.factor(x))
summary(fit2)
npop <-8 # Number of populations: 8
nsample2 <-12 # Number of snakes in each
n2 <-npop*nsample2 # Total number of data points
pop.grand.mean <- 50 #Grand mean SVL
pop.sd <-5 # sd of population effects about mean
pop.means <-
sigma2 <-3 # Residual sd
eps2 <-   # Draw residuals
pop.means <- rnorm(npop, pop.grand.mean, pop.sd)
eps2 <-   rnorm(n2, 0, sigma2# Draw residuals
eps2 <-   rnorm(n2, 0, sigma2)# Draw residuals
x2 <-
eps2 <-   rnorm(n2, 0, sigma2)# Draw residuals
x2 <- rep(1:npop, rep(nsample2,npop))
X2 <- as.matrix(model.matrix(~as.factor(x2)-1))
x2
X2
y2 <- as.numeric(X2 %% as.matrix(pop.means) + eps2) # as.numeric is ESSENTIAL
y2 <- as.numeric(X2 %*% as.matrix(pop.means) + eps2) # as.numeric is ESSENTIAL
boxplot(y2 ~x2,col="grey",xlab="Population",ylab="SVL",main="",las=1)
abline(h =pop.grand.mean)
mean(y2); sd(y2)
mean(y2); sd(y2)
pop <- as.factor(x2) #Define x as a factor and call it pop
lme.fit <- lmer(y2 ~ 1 + (1 | pop))
library('lme4')
lme.fit <- lmer(y2 ~ 1 + (1 | pop))
lme.fit
summary(lme.fit)
fit3=aov(y2 ~ Error(pop) )
fit3
# wrote a function to compare simulations of the probabilty vs the actual probability
binomial_p_est <- function(n=50, size=10, prob=1/6){
x <- rbinom(n=n, prob=prob, size=size)
prob_est <- mean(x)/ size
prob_diff <- prob - prob_est
return(prob_diff)
}
binomial_p_est()
prob_1000 <- replicate(1000, binomial_p_est())
#plots
hist(prob_1000)
plot(density(prob_1000))
x <- rgamma(n=1000, shape=1, scale=1)
hist(x, 20)
x <- rgamma(n=1000, shape=10, scale=10)
hist(x, 20)
hist(x, 20)
hist(x, 20)
hist(x, 20)
comb.norm = rnorm(10000,mean=5,sd=3) + rnorm(10000,mean=10,sd=4)
mean(comb.norm)
sd(comb.norm)
hist(comb.norm)
qqnorm(comb.norm)
qqline(comb.norm)
